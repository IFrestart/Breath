/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_webcon_wp_utils_NativeInterface */

#ifndef _Included_com_webcon_wp_utils_NativeInterface
#define _Included_com_webcon_wp_utils_NativeInterface
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_webcon_wp_utils_NativeInterface
 * Method:    init
 * Signature: (Ljava/lang/String;SLjava/lang/String;Ljava/lang/String;SLjava/lang/String;Ljava/lang/String;)I
 */

//------------------------------------------
//初始化
//@return 0成功，<0 失败
//------------------------------------------
JNIEXPORT jint JNICALL Java_com_webcon_wp_utils_NativeInterface_init
  (JNIEnv *, jobject);

//------------------------------------------
//反初始化
//@return 0成功，<0 失败
//------------------------------------------
JNIEXPORT jint JNICALL Java_com_webcon_wp_utils_NativeInterface_unInit
  (JNIEnv *, jobject);

//------------------------------------------
//登陆
//@note:在init成功之后才能调用
//in @param serverIp   登陆服务器的Ip
//in @param serverPort 登陆服务器的port
//in @param userName   登陆的用户账号
//in @param userPasswd   登陆的密码
//in @param userType   用户类型  1-手机; 2-pad
//in @param netType   网络类型
//@return 0成功，<0 失败
// -1:初始化未成功; 1:端口占用; -4获取默认会议失败; -5 加入默认会议失败;-7 登陆超时；9是登陆时错误返回值是1;其它是db返回错误值
//------------------------------------------
JNIEXPORT jint JNICALL Java_com_webcon_wp_utils_NativeInterface_login
  //(JNIEnv *, jobject, jstring serverIp, jint sererPort, jstring userName, jstring userPasswd, jint userType);
  (JNIEnv *env, jobject obj, jstring jServIp, jint jServPort, jbyteArray jszAccount,jstring jpasswd,jint userType,jint netType);

//add 2014-7-24
JNIEXPORT jint JNICALL Java_com_webcon_wp_utils_NativeInterface_logout
  (JNIEnv *, jobject);

//------------------------------------------
//提供函数回调类
//@return 0成功，<0 失败
//------------------------------------------

//JNIEXPORT jint JNICALL Java_com_webcon_wp_utils_NativeInterface_setCallBackObj
JNIEXPORT jint JNICALL Java_com_webcon_wp_utils_CCallbackMethod_setCallBackObj
 (JNIEnv *env, jobject obj);

//------------------------------------------
//后台开始工作
//@note:在FCNetACLogin成功之后才能调用
//in @param jpath    java回调函数的路径
//in @param jmethod  java回调函数的方法名称
//in @param bufName   存放数据缓存区的名称
//@return 0成功，<0 失败
//------------------------------------------

//JNIEXPORT jint JNICALL Java_com_webcon_wp_utils_NativeInterface_doWork
JNIEXPORT jint JNICALL Java_com_webcon_wp_utils_CCallbackMethod_doWork
  (JNIEnv *env, jobject obj, jstring jpath, jstring jmethod, jstring bufName);

//------------------------------------------
//发往数据库的数据
//@note:在FCNetACLogin成功之后才能调用
//in @param reqPdu    发送的数据标识
//in @param inData 发送的数据信息
//in @param inLen   发送数据的长度
//out @param outData 接收到的数据信息
//out @param outLen   存放接收到的最大数据长度
//@return > 返回的数据长度; <0 失败
//------------------------------------------

JNIEXPORT jint JNICALL Java_com_webcon_wp_utils_NativeInterface_getDBData
  //(JNIEnv *env, jobject jobj, jshort reqPdu,jbyteArray inData, jint inLen,jshort rspPdu,jbyteArray outData, jint outLen);
  (JNIEnv *env, jobject jobj, jshort reqPdu,jbyteArray inData, jint inLen,jbyteArray outData, jint outLen);
//------------------------------------------
//发送数据
//@note:在FCNetACLogin成功之后才能调用
// @param byGid   资源id,非点对点发送时有用,当gid = 0时 用默认资源发送,当gid != 0时只有在FCNetACJoinMeet成功调用之后有效
// @param dataType 发送方式(1: 必达控制包 2:聊天文本信息 3:音频数据包或 音视频混合时 4: 视频数据包)
//@param jdstUser  发送的目标用户账户
//@param reqPdu    发送请求的命令
//@param inData     发送的数据信息
//@param inLen  发送数据的长度
//@param p2pFlag  true 表示 通过p2p发送，false 表示通过转发服务器发送，
//@return 0成功，<0 失败, 3 正在建立通道 稍后重发
//------------------------------------------
JNIEXPORT jint JNICALL Java_com_webcon_wp_utils_NativeInterface_sendData
  (JNIEnv *env, jobject jobj, jshort byGid,jshort dataType,jstring jdstUser, jshort reqPdu,jbyteArray inData, jint inLen,jboolean p2pFlag);

#ifdef __cplusplus
}
#endif



#endif
